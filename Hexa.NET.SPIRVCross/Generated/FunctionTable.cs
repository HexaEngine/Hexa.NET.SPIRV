// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SPIRVCross
{
	public unsafe partial class SPIRV
	{
		internal static FunctionTable funcTable;

		/// <summary>
		/// Initializes the function table, automatically called. Do not call manually, only after <see cref="FreeApi"/>.
		/// </summary>
		public static void InitApi()
		{
			funcTable = new FunctionTable(LibraryLoader.LoadLibrary(GetLibraryName, null), 161);
			funcTable.Load(0, "spvc_get_version");
			funcTable.Load(1, "spvc_get_commit_revision_and_timestamp");
			funcTable.Load(2, "spvc_msl_vertex_attribute_init");
			funcTable.Load(3, "spvc_msl_shader_interface_var_init");
			funcTable.Load(4, "spvc_msl_shader_input_init");
			funcTable.Load(5, "spvc_msl_shader_interface_var_init_2");
			funcTable.Load(6, "spvc_msl_resource_binding_init");
			funcTable.Load(7, "spvc_msl_get_aux_buffer_struct_version");
			funcTable.Load(8, "spvc_msl_constexpr_sampler_init");
			funcTable.Load(9, "spvc_msl_sampler_ycbcr_conversion_init");
			funcTable.Load(10, "spvc_hlsl_resource_binding_init");
			funcTable.Load(11, "spvc_context_create");
			funcTable.Load(12, "spvc_context_destroy");
			funcTable.Load(13, "spvc_context_release_allocations");
			funcTable.Load(14, "spvc_context_get_last_error_string");
			funcTable.Load(15, "spvc_context_set_error_callback");
			funcTable.Load(16, "spvc_context_parse_spirv");
			funcTable.Load(17, "spvc_context_create_compiler");
			funcTable.Load(18, "spvc_compiler_get_current_id_bound");
			funcTable.Load(19, "spvc_compiler_create_compiler_options");
			funcTable.Load(20, "spvc_compiler_options_set_bool");
			funcTable.Load(21, "spvc_compiler_options_set_uint");
			funcTable.Load(22, "spvc_compiler_install_compiler_options");
			funcTable.Load(23, "spvc_compiler_compile");
			funcTable.Load(24, "spvc_compiler_add_header_line");
			funcTable.Load(25, "spvc_compiler_require_extension");
			funcTable.Load(26, "spvc_compiler_flatten_buffer_block");
			funcTable.Load(27, "spvc_compiler_variable_is_depth_or_compare");
			funcTable.Load(28, "spvc_compiler_mask_stage_output_by_location");
			funcTable.Load(29, "spvc_compiler_mask_stage_output_by_builtin");
			funcTable.Load(30, "spvc_compiler_hlsl_set_root_constants_layout");
			funcTable.Load(31, "spvc_compiler_hlsl_add_vertex_attribute_remap");
			funcTable.Load(32, "spvc_compiler_hlsl_remap_num_workgroups_builtin");
			funcTable.Load(33, "spvc_compiler_hlsl_set_resource_binding_flags");
			funcTable.Load(34, "spvc_compiler_hlsl_add_resource_binding");
			funcTable.Load(35, "spvc_compiler_hlsl_is_resource_used");
			funcTable.Load(36, "spvc_compiler_msl_is_rasterization_disabled");
			funcTable.Load(37, "spvc_compiler_msl_needs_aux_buffer");
			funcTable.Load(38, "spvc_compiler_msl_needs_swizzle_buffer");
			funcTable.Load(39, "spvc_compiler_msl_needs_buffer_size_buffer");
			funcTable.Load(40, "spvc_compiler_msl_needs_output_buffer");
			funcTable.Load(41, "spvc_compiler_msl_needs_patch_output_buffer");
			funcTable.Load(42, "spvc_compiler_msl_needs_input_threadgroup_mem");
			funcTable.Load(43, "spvc_compiler_msl_add_vertex_attribute");
			funcTable.Load(44, "spvc_compiler_msl_add_resource_binding");
			funcTable.Load(45, "spvc_compiler_msl_add_shader_input");
			funcTable.Load(46, "spvc_compiler_msl_add_shader_input_2");
			funcTable.Load(47, "spvc_compiler_msl_add_shader_output");
			funcTable.Load(48, "spvc_compiler_msl_add_shader_output_2");
			funcTable.Load(49, "spvc_compiler_msl_add_discrete_descriptor_set");
			funcTable.Load(50, "spvc_compiler_msl_set_argument_buffer_device_address_space");
			funcTable.Load(51, "spvc_compiler_msl_is_vertex_attribute_used");
			funcTable.Load(52, "spvc_compiler_msl_is_shader_input_used");
			funcTable.Load(53, "spvc_compiler_msl_is_shader_output_used");
			funcTable.Load(54, "spvc_compiler_msl_is_resource_used");
			funcTable.Load(55, "spvc_compiler_msl_remap_constexpr_sampler");
			funcTable.Load(56, "spvc_compiler_msl_remap_constexpr_sampler_by_binding");
			funcTable.Load(57, "spvc_compiler_msl_remap_constexpr_sampler_ycbcr");
			funcTable.Load(58, "spvc_compiler_msl_remap_constexpr_sampler_by_binding_ycbcr");
			funcTable.Load(59, "spvc_compiler_msl_set_fragment_output_components");
			funcTable.Load(60, "spvc_compiler_msl_get_automatic_resource_binding");
			funcTable.Load(61, "spvc_compiler_msl_get_automatic_resource_binding_secondary");
			funcTable.Load(62, "spvc_compiler_msl_add_dynamic_buffer");
			funcTable.Load(63, "spvc_compiler_msl_add_inline_uniform_block");
			funcTable.Load(64, "spvc_compiler_msl_set_combined_sampler_suffix");
			funcTable.Load(65, "spvc_compiler_msl_get_combined_sampler_suffix");
			funcTable.Load(66, "spvc_compiler_get_active_interface_variables");
			funcTable.Load(67, "spvc_compiler_set_enabled_interface_variables");
			funcTable.Load(68, "spvc_compiler_create_shader_resources");
			funcTable.Load(69, "spvc_compiler_create_shader_resources_for_active_variables");
			funcTable.Load(70, "spvc_resources_get_resource_list_for_type");
			funcTable.Load(71, "spvc_resources_get_builtin_resource_list_for_type");
			funcTable.Load(72, "spvc_compiler_set_decoration");
			funcTable.Load(73, "spvc_compiler_set_decoration_string");
			funcTable.Load(74, "spvc_compiler_set_name");
			funcTable.Load(75, "spvc_compiler_set_member_decoration");
			funcTable.Load(76, "spvc_compiler_set_member_decoration_string");
			funcTable.Load(77, "spvc_compiler_set_member_name");
			funcTable.Load(78, "spvc_compiler_unset_decoration");
			funcTable.Load(79, "spvc_compiler_unset_member_decoration");
			funcTable.Load(80, "spvc_compiler_has_decoration");
			funcTable.Load(81, "spvc_compiler_has_member_decoration");
			funcTable.Load(82, "spvc_compiler_get_name");
			funcTable.Load(83, "spvc_compiler_get_decoration");
			funcTable.Load(84, "spvc_compiler_get_decoration_string");
			funcTable.Load(85, "spvc_compiler_get_member_decoration");
			funcTable.Load(86, "spvc_compiler_get_member_decoration_string");
			funcTable.Load(87, "spvc_compiler_get_member_name");
			funcTable.Load(88, "spvc_compiler_get_entry_points");
			funcTable.Load(89, "spvc_compiler_set_entry_point");
			funcTable.Load(90, "spvc_compiler_rename_entry_point");
			funcTable.Load(91, "spvc_compiler_get_cleansed_entry_point_name");
			funcTable.Load(92, "spvc_compiler_set_execution_mode");
			funcTable.Load(93, "spvc_compiler_unset_execution_mode");
			funcTable.Load(94, "spvc_compiler_set_execution_mode_with_arguments");
			funcTable.Load(95, "spvc_compiler_get_execution_modes");
			funcTable.Load(96, "spvc_compiler_get_execution_mode_argument");
			funcTable.Load(97, "spvc_compiler_get_execution_mode_argument_by_index");
			funcTable.Load(98, "spvc_compiler_get_execution_model");
			funcTable.Load(99, "spvc_compiler_update_active_builtins");
			funcTable.Load(100, "spvc_compiler_has_active_builtin");
			funcTable.Load(101, "spvc_compiler_get_type_handle");
			funcTable.Load(102, "spvc_type_get_base_type_id");
			funcTable.Load(103, "spvc_type_get_basetype");
			funcTable.Load(104, "spvc_type_get_bit_width");
			funcTable.Load(105, "spvc_type_get_vector_size");
			funcTable.Load(106, "spvc_type_get_columns");
			funcTable.Load(107, "spvc_type_get_num_array_dimensions");
			funcTable.Load(108, "spvc_type_array_dimension_is_literal");
			funcTable.Load(109, "spvc_type_get_array_dimension");
			funcTable.Load(110, "spvc_type_get_num_member_types");
			funcTable.Load(111, "spvc_type_get_member_type");
			funcTable.Load(112, "spvc_type_get_storage_class");
			funcTable.Load(113, "spvc_type_get_image_sampled_type");
			funcTable.Load(114, "spvc_type_get_image_dimension");
			funcTable.Load(115, "spvc_type_get_image_is_depth");
			funcTable.Load(116, "spvc_type_get_image_arrayed");
			funcTable.Load(117, "spvc_type_get_image_multisampled");
			funcTable.Load(118, "spvc_type_get_image_is_storage");
			funcTable.Load(119, "spvc_type_get_image_storage_format");
			funcTable.Load(120, "spvc_type_get_image_access_qualifier");
			funcTable.Load(121, "spvc_compiler_get_declared_struct_size");
			funcTable.Load(122, "spvc_compiler_get_declared_struct_size_runtime_array");
			funcTable.Load(123, "spvc_compiler_get_declared_struct_member_size");
			funcTable.Load(124, "spvc_compiler_type_struct_member_offset");
			funcTable.Load(125, "spvc_compiler_type_struct_member_array_stride");
			funcTable.Load(126, "spvc_compiler_type_struct_member_matrix_stride");
			funcTable.Load(127, "spvc_compiler_build_dummy_sampler_for_combined_images");
			funcTable.Load(128, "spvc_compiler_build_combined_image_samplers");
			funcTable.Load(129, "spvc_compiler_get_combined_image_samplers");
			funcTable.Load(130, "spvc_compiler_get_specialization_constants");
			funcTable.Load(131, "spvc_compiler_get_constant_handle");
			funcTable.Load(132, "spvc_compiler_get_work_group_size_specialization_constants");
			funcTable.Load(133, "spvc_compiler_get_active_buffer_ranges");
			funcTable.Load(134, "spvc_constant_get_scalar_fp16");
			funcTable.Load(135, "spvc_constant_get_scalar_fp32");
			funcTable.Load(136, "spvc_constant_get_scalar_fp64");
			funcTable.Load(137, "spvc_constant_get_scalar_u32");
			funcTable.Load(138, "spvc_constant_get_scalar_i32");
			funcTable.Load(139, "spvc_constant_get_scalar_u16");
			funcTable.Load(140, "spvc_constant_get_scalar_i16");
			funcTable.Load(141, "spvc_constant_get_scalar_u8");
			funcTable.Load(142, "spvc_constant_get_scalar_i8");
			funcTable.Load(143, "spvc_constant_get_subconstants");
			funcTable.Load(144, "spvc_constant_get_type");
			funcTable.Load(145, "spvc_constant_set_scalar_fp16");
			funcTable.Load(146, "spvc_constant_set_scalar_fp32");
			funcTable.Load(147, "spvc_constant_set_scalar_fp64");
			funcTable.Load(148, "spvc_constant_set_scalar_u32");
			funcTable.Load(149, "spvc_constant_set_scalar_i32");
			funcTable.Load(150, "spvc_constant_set_scalar_u16");
			funcTable.Load(151, "spvc_constant_set_scalar_i16");
			funcTable.Load(152, "spvc_constant_set_scalar_u8");
			funcTable.Load(153, "spvc_constant_set_scalar_i8");
			funcTable.Load(154, "spvc_compiler_get_binary_offset_for_decoration");
			funcTable.Load(155, "spvc_compiler_buffer_is_hlsl_counter_buffer");
			funcTable.Load(156, "spvc_compiler_buffer_get_hlsl_counter_buffer");
			funcTable.Load(157, "spvc_compiler_get_declared_capabilities");
			funcTable.Load(158, "spvc_compiler_get_declared_extensions");
			funcTable.Load(159, "spvc_compiler_get_remapped_declared_block_name");
			funcTable.Load(160, "spvc_compiler_get_buffer_block_decorations");
		}

		public static void FreeApi()
		{
			funcTable.Free();
		}
	}
}
